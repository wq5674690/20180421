- 以Python实现对服务器状态信息的采集、监控和发送报警信息；
- 可以在被监控服务器上部署Agent以采集数据并发送到监控服务器（Server）；
- 支持对Linux/Windows服务器的监控；
- Agent的数据采集频率可以配置；
- 至少在一类服务器（Linux或Windows）上能将Agent配置为系统服务，开机自动
  启动；
- 数据采集内容包括CPU使用率、内存使用率、磁盘（文件系统）使用率；
- Server端根据Agent发来的数据判断是否需要报警；
- Server将报警信息存入数据库，以便报警信息发送系统发送报警信息；
- 所有的报警信息（无论持续多久）合并为一条开始报警信息，一条恢复正常信息
  ；

技术性的要求如下：

- 使用Python3实现；
- Agent部分除了psutil库以外尽量少使用非标准库；
- 监控系统Server端使用的库可以自行选择，但不能使用Twisted；
- Server端能支持大量Agent；
- 所有代码必须通过pep8代码风格检查；
- 代码清晰，所有缩进使用4个空格；
- 保存报警信息的数据库可以任选；
------------------------------------------------------------------------------------------------
说明：
- 被监控服务器和监控服务器（Server）上安装Python3；
- 监控服务器（Server）上安装MySQL；
- Agent和监控服务器（Server）通过socket进行通讯；

暂时未解决的问题：
- 没有加入GUI界面
- 没有实行多台Agent多线连接服务器
- 没有加入磁盘的监控
- 没有实现对Linux服务器的监控
- 没有实现对服务器监控的用html界面显示
- 没有实现手动启动或停止监控服务

说明文件：
1、 app文件为在客户端运行的文件；
2、 server文件为在服务器运行的问价；
3、 sql文件为在服务器端或者数据库服务器（MySQL）创建表文件；
4、 文件中都是在本地测试，如果需要把正式测试，需要把app和server二个文件中的IP地址修改成实际测试地址，同时修改server和sql文件的数据库地址和密码；